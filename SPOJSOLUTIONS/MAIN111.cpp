// Problem: MAIN111
// Submission ID: 26142373
// Language: 4748

#include<bits/stdc++.h>
using namespace std;
bool seive[100001];
int prefix[100001];
bool isSubSequence(string str1,string str2)
{
   int j = 0;
    int n=str2.size(),m=str1.size();
    for (int i=0; i<n&&j<m; i++)
       if (str1[j] == str2[i])
         j++;
  return (j==m);
}

int main()
{   vector<string>relevant;
    vector<string>primes={"11","19","41","61","89","101","109","149","181","191","199","401","409","419","449","461","491","499","601","619","641","661","691","809","811","881","911","919","941","991","1009","1019","1049","1061","1069","1091","1109","1181","1409","1481","1489","1499","1601","1609","1619","1669","1699","1801","1811","1861","1889","1901","1949","1999","4001","4019","4049","4091","4099","4111","4409","4441","4481","4649","4691","4801","4861","4889","4909","4919","4969","4999","6011","6089","6091","6101","6199","6449","6469","6481","6491","6619","6661","6689","6691","6841","6869","6899","6911","6949","6961","6991","8009","8011","8069","8081","8089","8101","8111","8161","8191","8419","8461","8609","8641","8669","8681","8689","8699","8819","8849","8861","8941","8969","8999","9001","9011","9041","9049","9091","9109","9161","9181","9199","9419","9461","9491","9601","9619","9649","9661","9689","9811","9901","9941","9949","10009","10061","10069","10091","10099","10111","10141","10169","10181","10499","10601","10691","10861","10889","10891","10909","10949","11069","11119","11149","11161","11411","11489","11491","11681","11689","11699","11801","11909","11941","11969","11981","14009","14011","14081","14149","14401","14411","14419","14449","14461","14489","14669","14699","14869","14891","14969","16001","16061","16069","16091","16111","16141","16189","16411","16481","16619","16649","16661","16691","16699","16811","16889","16901","16981","18041","18049","18061","18089","18119","18149","18169","18181","18191","18199","18401","18461","18481","18661","18691","18869","18899","18911","18919","19001","19009","19069","19081","19141","19181","19441","19469","19489","19609","19661","19681","19699","19801","19819","19841","19861","19889","19891","19919","19949","19961","19991","40009","40099","40111","40169","40189","40499","40609","40699","40801","40819","40841","40849","40949","40961","41011","41081","41141","41149","41161","41189","41411","41491","41609","41611","41641","41669","41681","41801","41809","41849","41911","41941","41969","41981","41999","44041","44089","44101","44111","44119","44189","44449","44491","44641","44699","44809","44819","44909","46049","46061","46091","46099","46141","46181","46199","46411","46441","46489","46499","46601","46619","46649","46681","46691","46811","46819","46861","46889","46901","46919","48049","48091","48109","48119","48409","48449","48481","48491","48611","48619","48649","48661","48809","48869","48889","48989","48991","49009","49019","49069","49081","49109","49169","49199","49409","49411","49481","49499","49669","49681","49801","49811","49891","49919","49991","49999","60041","60089","60091","60101","60149","60161","60169","60449","60601","60611","60649","60661","60689","60811","60869","60889","60899","60901","60919","60961","61001","61091","61099","61141","61169","61409","61441","61469","61609","61681","61819","61861","61909","61949","61961","61981","61991","64019","64081","64091","64109","64189","64489","64499","64601","64609","64661","64811","64849","64891","64901","64919","64969","66041","66089","66109","66161","66169","66191","66449","66491","66499","66601","66809","66841","66889","66919","66949","68041","68099","68111","68141","68161","68449","68489","68491","68611","68669","68699","68819","68881","68891","68899","68909","69001","69011","69019","69061","69109","69119","69149","69191","69401","69481","69491","69499","69661","69691","69809","69899","69911","69941","69991","80111","80141","80149","80191","80449","80489","80491","80611","80669","80681","80809","80819","80849","80909","80911","80989","81001","81019","81041","81049","81101","81119","81181","81199","81401","81409","81611","81619","81649","81689","81869","81899","81901","81919","84011","84061","84089","84181","84191","84199","84401","84449","84481","84499","84649","84691","84809","84811","84869","84919","84961","84991","86011","86069","86111","86161","86441","86461","86491","86689","86861","86869","86969","86981","88001","88019","88069","88169","88411","88469","88499","88609","88661","88681","88801","88811","88819","88861","88919","88969","89009","89041","89069","89101","89119","89189","89449","89491","89611","89669","89681","89689","89809","89819","89849","89891","89899","89909","89989","90001","90011","90019","90089","90149","90191","90199","90401","90469","90481","90499","90619","90641","90841","90901","90911","90989","91009","91019","91081","91099","91141","91199","91411","91499","91691","91801","91811","91841","91909","91961","91969","94009","94049","94099","94109","94111","94169","94441","94649","94811","94819","94841","94849","94889","94949","94961","94999","96001","96149","96181","96199","96401","96419","96461","96469","96601","96661","96911","96989","98009","98011","98041","98081","98101","98411","98419","98491","98641","98669","98689","98801","98809","98849","98869","98899","98909","98911","98981","98999","99041","99089","99109","99119","99149","99181","99191","99401","99409","99469","99611","99661","99689","99809","99881","99901","99961","99989","99991",};
  for(int i=2;i*i<=100000;i++)
     if(seive[i]==false)
       for(int j=i*i;j<=100000;j+=i)
         seive[j]=true;
    for(int i=2;i<100001;i++)
    {  prefix[i]=prefix[i-1];
       if(seive[i]==true)
       { string ass=to_string(i);
         int key=0;
         for(auto j:ass)
           {
               if(j=='2'||j=='3'||j=='5'||j=='7')
                 {key=1;break;}
           }
           //char c='  ';
       if(key==0)
              relevant.push_back(ass);

       }
       
       
    }

  prefix[0]=1;
  prefix[1]=1;
  int cnt=1;
  for(auto k:relevant)
   {bool key=1;
     for(auto j:primes)
        { if(j.size()==k.size()&&j>k)
            break;
          if(isSubSequence(j,k))
            {key=0;
            break;}
        }
    if(key==1)
    {   prefix[stoi(k)]++;;
        }
   }
 for(int i=1;i<=100000;i++)
 { prefix[i]+=prefix[i-1];}
 int t;
 scanf("%d",&t);
 while(t--)
 { int q,w;
   scanf("%d%d",&q,&w);
   if(q>w)
        swap(q,w);

   printf("%d\n",prefix[w]-prefix[q-1]);
 }

return 0;}
